
■Gemini CLI
https://github.com/google-gemini/gemini-cli
npm install -g @google/gemini-cli@latest

PowerShell or WindowsTerminalでgeminiコマンドが失敗する場合：
-----
### 原因

エラーメッセージにある通り、これはPowerShellの「実行ポリシー（Execution Policy）」によるものです。

  * コマンドプロンプトの場合: `gemini`と入力すると、`gemini.cmd`というファイルが実行されます。これは従来のバッチファイルなので、このセキュリティ設定の影響を受けません。
  * PowerShellの場合: `gemini`と入力すると、`gemini.ps1`というPowerShell専用のスクリプトファイルを実行しようとします。しかし、PowerShellの初期設定では、意図しない悪意のあるスクリプトが実行されるのを防ぐため、スクリプトの実行が制限（無効化）されています。

そのため、コマンドプロンプトでは動くのに、Windows TerminalのデフォルトシェルであるPowerShellではエラーになってしまうのです。

### 解決方法

PowerShellの実行ポリシーを、より安全な範囲でスクリプトの実行を許可する設定に変更することで解決できます。以下の手順に従って操作してください。

1. PowerShellを「管理者」として実行する

画像を見るとすでに管理者として実行されていますが、もし通常モードで開いている場合は、以下の手順で管理者として開いてください。

  * Windows Terminalのタブの横にある「`+`」の隣の「`∨`」をクリックします。
  * メニューから「Windows PowerShell」のプロファイルを探し、Shiftキーを押しながらクリックするか、Ctrl+Shiftを押しながらクリックすると管理者として開きます。

2. 実行ポリシーを変更するコマンドを入力する

管理者として開いたPowerShellの画面で、以下のコマンドをコピーして貼り付け、Enterキーを押してください。
Set-ExecutionPolicy RemoteSigned -Scope CurrentUser

コマンドの解説:

  * `Set-ExecutionPolicy`: 実行ポリシーを設定するコマンドです。
  * `RemoteSigned`: 「ローカルで作成したスクリプトは実行を許可し、インターネットからダウンロードしたスクリプトは信頼できる発行元の署名がある場合のみ実行を許可する」という、セキュリティと利便性のバランスが取れた設定です。
  * `-Scope CurrentUser`: この設定を、システム全体ではなく、現在ログインしているあなたのアカウントにのみ適用します。これにより、システムへの影響を最小限に抑えることができます。

3. 設定の変更を承認する

コマンドを実行すると、以下のような確認メッセージが表示されます。

```
実行ポリシーの変更
実行ポリシーは、信頼されていないスクリプトからの保護に役立ちます。実行ポリシーを変更すると、about_Execution_Policies
のヘルプ トピックで説明されているセキュリティ上の危険にさらされる可能性があります。実行ポリシーを変更しますか?
[Y] はい(Y)  [N] いいえ(N)  [S] 中断(S)  [?] ヘルプ (既定値は "N"):
```

ここで `Y` と入力し、Enterキーを押してください。

4. 確認

以上で設定は完了です。管理者ウィンドウは閉じて構いません。
新しくWindows Terminalのタブを開き（管理者である必要はありません）、再度以下のコマンドを実行してみてください。

```powershell
gemini
```

今度は`gemini-cli`が正常に起動するはずです。
-----

